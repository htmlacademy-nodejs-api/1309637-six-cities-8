openapi: 3.1.0
info:
  title: API сервер для проекта "Шесть городов"
  description: |-
    * Список ресурсов и маршрутов сервера "Шесть городов"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
tags:
  - name: offers
    description: Действия с объявлениями
  - name: comments
    description: Действия с комментариями
  - name: users
    description: Действия с пользователем

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Создание нового пользователя
      description: Создает нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Вход в закрытую часть приложения
      description: Входит в закрытую часть приложения.

      requestBody:
        description: Информация для логина пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
        required: true

      responses:
        "200":
          description: Пользователь авторизован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "404":
          description: Несуществующий логин или пароль.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        "200":
          description: Информация по авторизованному пользователю.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

  /users/logout:
    post:
      tags:
        - users
      summary: Выход из закрытой части приложения
      description: Выходит из закрытой части приложения.

      responses:
        "200":
          description: Логаут пользователя.

  /users/offers:
    get:
      tags:
        - users
      summary: Получение списка предложений, добавленных в избранное
      description: Возвращает список предложений, добавленных в избранное

      responses:
        "200":
          description: Массив предложений, добавленных в избранное.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'

  /users/offers/{offerId}:
    post:
      tags:
        - users
      summary: Добавление предложения в избранное
      description: Добавляет предложение в избранное

      responses:
        "200":
          description: Предложение добавлено в избранное.

        "404":
          description: Предложение с таким id не найдено.

    delete:
      tags:
        - users
      summary: Удаление предложения из избранного
      description: Удаляет предложение из избранного

      responses:
        "204":
          description: Предложение удалено из избранного.

        "404":
          description: Предложение с таким id не найдено.

  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения
      description: Создает новое предложение

      requestBody:
        description: Информация для нового предложения.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'
        required: true

      responses:
        "200":
          description: Предложение создано.

        "400":
          description: Введена некорректная информация

    get:
      tags:
        - offers
      summary: Получение списка предложений по аренде
      description: Возвращает список предложений по аренде

      responses:
        "200":
          description: Массив предложений.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offers'

  /offers/{offerId}:
    patch:
      tags:
        - offers
      summary: Редактирование предложения
      description: Редактирует предложение

      requestBody:
        description: Информация для логина пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffer'

      responses:
        "200":
          description: Предложение обновлено.

        "404":
          description: Предложение с таким id не найдено.

    delete:
      tags:
        - offers
      summary: Удаление предложения
      description: Удаляет предложение

      responses:
        "204":
          description: Предложение удалено.

        "404":
          description: Предложение с таким id не найдено.

    get:
      tags:
        - offers
      summary: Получение детальной информации о предложении
      description: Возвращает детальную информации о предложении

      responses:
        "200":
          description: Информация о предложении.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "404":
          description: Предложение с таким id не найдено.

  /comments/{offerID}:
    get:
      tags:
        - comments
      summary: Получение списка комментариев для предложения
      description: Возвращает список комментариев для предложения

      responses:
        "200":
          description: Массив комментариев.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comments'

        "404":
          description: Предложение с таким id не найдено.

    post:
      tags:
        - comments
      summary: Добавление комментария для предложения
      description: Добавляет комментарий для предложения

      requestBody:
        description: Информация для нового комментария.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createComment'
        required: true

      responses:
        "200":
          description: Комментарий добавлен.

        "400":
          description: Данные введены некорректно.

        "404":
          description: Предложение с таким id не найдено.

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: email@mail.ru

        name:
          type: string
          example: Иван

        password:
          type: string
          example: d1sd2345678

    user:
      type: object

      properties:
        id:
          type: string
          example: fisjofoiweiowj42342

        name:
          type: string
          example: Иван

        email:
          type: string
          example: email@mail.ru

        type:
          type: string
          enum:
            - pro
            - обычный

        avatarPath:
          type: string;
          exmaple: image.jpg

    login:
      type: object
      properties:
        email:
          type: string
          example: email@mail.ru

        password:
          type: string
          example: 12345678

    offer:
      type: object
      properties:
        id:
          type: string
          example: fisjofoiweiowj42342

        title:
          type: string
          example: Предложение

        createdDate:
          type: string
          example: 2024-09-11T21:16:16.734Z

        city:
          type: string
          example: Paris

        previewImagePath:
          type: string;
          example: image.jpg

        photos:
          type: array
          items:
            type: string
            example: image.jpg

        isPremium:
          type: boolean

        rating:
          type: integer

        housingType:
          type: string
          enum:
            - apartment
            - house
            - room
            - hotel

        roomsNumber:
          type: integer

        visitorsNumber:
          type: integer

        price:
          type: integer

        facilities:
          type: array
          items:
            type: string
            enum:
              - Breakfast
              - Air conditioning
              - Laptop friendly workspace
              - Baby seat
              - Washer
              - Towels
              - Fridge

        author:
          $ref: '#/components/schemas/user'

        coords:
          type: object
          properties:
            latitude:
              type: integer

            longitude:
              type: integer

    createOffer:
      type: object
      properties:
        title:
          type: string
          example: Предложение

        city:
          type: string
          example: Paris

        previewImagePath:
          type: string;
          example: image.jpg

        photos:
          type: array
          items:
            type: string
            example: image.jpg

        housingType:
          type: string
          enum:
            - apartment
            - house
            - room
            - hotel

        roomsNumber:
          type: integer

        visitorsNumber:
          type: integer

        price:
          type: integer

        facilities:
          type: array
          items:
            type: string
            enum:
              - Breakfast
              - Air conditioning
              - Laptop friendly workspace
              - Baby seat
              - Washer
              - Towels
              - Fridge

    offers:
      type: array
      items:
        $ref: '#/components/schemas/offer'

    comment:
      type: object
      properties:
        id:
          type: string;
          example: dfnrjfonfow43423

        text:
          type: string
          example: Текст

        createdDate:
          type: string;
          example: 2024-09-11T21:16:16.734Z

        rating:
          type: integer

        author:
          $ref: '#/components/schemas/user'

    comments:
      type: array
      items:
        $ref: '#/components/schemas/comment'

    createComment:
      type: object
      properties:
        text:
          type: string
          example: Текст

        aurthorId:
          type: string
          example: dfnrjfonfow43423
